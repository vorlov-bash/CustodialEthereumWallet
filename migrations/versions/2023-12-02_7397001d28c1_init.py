"""init

Revision ID: 7397001d28c1
Revises: 6902df372906
Create Date: 2023-12-02 19:01:38.595624

"""
import logging
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.ext.asyncio import AsyncConnection

from src.core.config import w3_obj

# revision identifiers, used by Alembic.
revision: str = "7397001d28c1"
down_revision: Union[str, None] = "6902df372906"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

logger = logging.getLogger(f"migration.{revision}")


async def get_nonce_for_wallets(sa_async_connection: AsyncConnection) -> None:
    query = (
        sa.select(
            sa.column("id"),
            sa.column("address"),
        )
        .select_from(sa.table("wallet"))
        .where(
            sa.column("nonce").is_(None),
        )
    )

    wallets = await sa_async_connection.execute(query)

    logger.info(f"Wallets {wallets} selected")
    for row_id in wallets:
        nonce = await w3_obj.eth.get_transaction_count(row_id[1])
        query = (
            sa.update(sa.table("wallet", sa.column("nonce")))
            .where(sa.column("id") == row_id[0])
            .values(nonce=nonce)
        )

        await sa_async_connection.execute(query)
        logger.info(f"Wallet {row_id} updated with nonce {nonce}")


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("wallet", sa.Column("nonce", sa.Integer(), nullable=True))
    op.run_async(get_nonce_for_wallets)
    op.alter_column("wallet", "nonce", nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("wallet", "nonce")
    # ### end Alembic commands ###
